# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml
analyzer:
  plugins:
    - custom_lint
linter:
  rules:
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - always_use_package_imports
    - avoid_void_async
    - await_only_futures
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - omit_local_variable_types
    - prefer_constructors_over_static_methods
    - prefer_interpolation_to_compose_strings
    - prefer_single_quotes
    - require_trailing_commas
    - unawaited_futures
    - prefer_final_locals
    - use_named_constants
    - avoid_dynamic_calls

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
